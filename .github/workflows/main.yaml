name: Release Todo project
on: [push]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dev-ops-with-kubernetes-cluster
  GKE_ZONE: europe-north1-b
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
  FRONTEND_IMAGE: todo-frontend
  BACKEND_IMAGE: todo-backend
jobs:
  create-namespace:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.2.0
      - name: Create namespace
        run: |-
          kubectl create namespace "todo-${GITHUB_REF_NAME}" || echo "Namespace \"$NAMESPACE\" already created"
      - name: Create persistent volume
        run: |-
          kubectl config set-context --current --namespace="todo-${GITHUB_REF_NAME}"
          sops --decrypt todo-backend/manifests/secret.enc.yaml | kubectl apply -f -
          kubectl apply -f manifests/todo-pv.yaml
          kubectl apply -f manifests/todo-pv-claim.yaml
          kubectl apply -f todo-backend/manifests/postgres-svc.yaml
          kubectl apply -f todo-backend/manifests/postgres-statefulset.yaml
          kubectl apply -f manifests/todo-ingress.yaml
      # - name: Create DB schema
      #   run: |-
      #     kubectl exec -it statefulsets/postgres-ss -- psql -U postgres -d postgres -c "CREATE TABLE IF NOT EXISTS todos (created_at TIMESTAMP NOT NULL, description TEXT NOT NULL)"
  frontend-deploy:
    name: Frontend deploy
    needs: create-namespace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            ./todo-frontend/
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
      - name: Deploy
        run: |-
          kubectl config set-context --current --namespace="todo-${GITHUB_REF_NAME}"
          cd todo-frontend
          kustomize edit set image PROJECT/IMAGE=gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment todo-frontend-dep
          kubectl get services -o wide
  backend-deploy:
    name: Backend deploy
    needs: create-namespace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            ./todo-backend/
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
      - name: Deploy
        run: |-
          kubectl config set-context --current --namespace="todo-${GITHUB_REF_NAME}"
          cd todo-backend
          kustomize edit set image PROJECT/IMAGE=gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment todo-backend-dep
          kubectl get services -o wide
